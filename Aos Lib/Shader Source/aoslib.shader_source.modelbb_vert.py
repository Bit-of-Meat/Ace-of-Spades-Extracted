# uncompyle6 version 3.9.0
# Python bytecode version base 2.7 (62211)
# Decompiled from: Python 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
# Embedded file name: C:\TeamCity\buildAgent\work\dc8eb0b1d2cf198a\Main\client\standalone\build\pyi.win32\run_obfuscated\out00-PYZ.pyz\aoslib.shader_source.modelbb_vert
modelbb_vert = '\n#version 110\n\n#define KV6_NORMAL\n\nvarying float diffuse_value;\nuniform vec4 blend_color;\n//uniform vec3 default_color;\n\nfloat FogEyeRadial(vec4 Rh)\n{\n    vec4 Re = Rh / Rh.w;\n    return length(Re);\n}\n\nvoid main() {\n    vec3 vertex_light_position = gl_LightSource[0].position.xyz;\n    vec3 vertex_normal;\n    diffuse_value = 0.0;\n#ifdef KV6_NORMAL\n//    if (gl_Normal.x <= 1.0) \n    {\n        vertex_normal = normalize(gl_NormalMatrix * gl_Normal);\n        diffuse_value = dot(vertex_normal, vertex_light_position);\n    }\n#endif\n    vec4 color = gl_Color;\n//    if (color.r == 0.0 && color.g == 0.0 && color.b == 0.0)\n//        color.rgb = default_color;\n    gl_FrontColor = color * blend_color;\n    vec3 right_vec = vec3(gl_ModelViewMatrix[0][0], gl_ModelViewMatrix[1][0],\n                          gl_ModelViewMatrix[2][0]);\n    vec3 up_vec = vec3(gl_ModelViewMatrix[0][1], gl_ModelViewMatrix[1][1],\n                       gl_ModelViewMatrix[2][1]);\n    vec2 texCoord = gl_MultiTexCoord0.xy;\n    float scale = length(gl_ModelViewMatrix[0]) * 1.25;\n    float pos_x = ((texCoord.x - 0.5) * 2.0) / scale;\n    float pos_y = ((texCoord.y - 0.5) * 2.0) / scale;\n    vec4 corner = vec4(gl_Vertex.xyz + (pos_x * right_vec) + (pos_y * up_vec),\n                       gl_Vertex.w);\n    gl_Position = gl_ModelViewProjectionMatrix * corner; \n    gl_FogFragCoord = FogEyeRadial(gl_ModelViewMatrix * gl_Vertex);\n}\n'
# okay decompiling out\aoslib.shader_source.modelbb_vert.pyc
